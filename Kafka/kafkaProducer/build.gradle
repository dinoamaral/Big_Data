/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala library project to get you started.
 * For more details take a look at the Scala plugin chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/scala_plugin.html
 */

group = "kafkaProd"

// Apply the scala plugin to add support for Scala
apply plugin: 'scala'
apply plugin: 'idea'

idea {
	module {
		downloadJavadoc = false
		downloadSources = false
	}
}


// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use Scala 2.11 in our library project
    compile 'org.scala-lang:scala-library:2.11.11'

    zinc 'com.typesafe.zinc:zinc:0.3.15'

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka_2.11
    // compile group: 'org.apache.kafka', name: 'kafka_2.11', version: '0.9.0.1'

// https://mvnrepository.com/artifact/org.apache.kafka/kafka
    compile group: 'org.apache.kafka', name: 'kafka_2.12', version: '1.0.1'

//    compile group: 'com.typesafe.scala-logging', name: 'scala-logging_2.11', version: '3.7.2'

//    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.2'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.2'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.module/jackson-module-scala_2.11
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-scala_2.11', version: '2.9.2'

    // https://mvnrepository.com/artifact/org.apache.hbase/hbase-client
    // compile group: 'org.apache.hbase', name: 'hbase-client', version: '1.2.6'

    // Use Scalatest for testing our library
    //testCompile 'junit:junit:4.12'
    testCompile 'org.scalatest:scalatest_2.11:3.0.4'
    // Need scala-xml at test runtime
}

task uberjar(type: Jar, dependsOn: [':compileJava', ':processResources']) {
    from files(sourceSets.main.output.classesDir)
    from configurations.runtime.asFileTree.files.collect { zipTree(it) }
    manifest {
        attributes 'Main-Class': 'kafkaProducer'
    }
} with jar

task fatjar(type: Jar) {
    eachFile { it.duplicatesStrategy = DuplicatesStrategy.EXCLUDE }
//	dependsOn configurations.runtime
    manifest {
        attributes	'Implementation-Title': 'Gradle Uber Jar',
                    'Main-Class': 'kafkaProducer'
    }
    baseName = project.name + '_full'
    from(configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }){
        exclude 'META-INF/INDEX.LIST','META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
   } with jar
}